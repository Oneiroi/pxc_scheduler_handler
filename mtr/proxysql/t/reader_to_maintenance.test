# Setup:
# 1. 3 node PXC cluster + ProxySQL
# 2. PXC:
#     node_1 : writer/reader
#     node_2 : reader/backup writer with weight 1000
#     node_3 : reader/backup writer with weight 999
# 3. ProxySQL:
#     scheduler: active_failover=1 retry_down=2 writer_is_also_reader=0
#
# Scenario:
# 1. node_2: set pxc_maint_mode=MAINTENANCE
#     => node_2 state changes to SOFT_OFFLINE in ProxySQL
# 2. node_2: set pxc_maint_mode=DISABLED
#     => node_2 state changes to ONLINE. Node still in readers


--source include/galera_cluster_3nodes.inc

# start ProxySQL with default configuration
--source ../include/common_proxysql_init.inc

--connection node_1
--source ../include/common_pxc_init.inc

#
# ARRANGE
#

# Now setup ProxySql
--connection proxysql_admin
--let wHG = 100
--let rHG = 101

# mysql user
--eval INSERT INTO MYSQL_USERS (username,password,active,default_hostgroup,default_schema,transaction_persistent,comment) VALUES ('app_test','test',1,$wHG,'mysql',1,'application test user DC1')

# query rules
--eval INSERT INTO mysql_query_rules (rule_id,proxy_port,username,destination_hostgroup,active,retries,match_digest,apply) VALUES(1040,6033,'app_test',$wHG,1,3,'^SELECT.*FOR UPDATE',1)
--eval INSERT INTO mysql_query_rules (rule_id,proxy_port,username,destination_hostgroup,active,retries,match_digest,apply) VALUES(1042,6033,'app_test',$rHG,1,3,'^SELECT.*$',1)

--source ../include/apply_proxysql_config.inc

# PxC nodes setup
--eval INSERT INTO mysql_servers (hostname,hostgroup_id,port,weight,max_connections,comment) VALUES ('127.0.0.1',$wHG,$NODE_MYPORT_1,10000,1000,'WRITE')
--eval INSERT INTO mysql_servers (hostname,hostgroup_id,port,weight,max_connections,comment) VALUES ('127.0.0.1',$rHG,$NODE_MYPORT_1,100,1000,'READ/WRITE')
--eval INSERT INTO mysql_servers (hostname,hostgroup_id,port,weight,max_connections,comment) VALUES ('127.0.0.1',$rHG,$NODE_MYPORT_2,10000,1000,'READ')
--eval INSERT INTO mysql_servers (hostname,hostgroup_id,port,weight,max_connections,comment) VALUES ('127.0.0.1',$rHG,$NODE_MYPORT_3,10000,1000,'READ')

--eval INSERT INTO mysql_servers (hostname,hostgroup_id,port,weight,max_connections,comment) VALUES ('127.0.0.1',8100,$NODE_MYPORT_2,1000,1000,'Backup writer 1')
--eval INSERT INTO mysql_servers (hostname,hostgroup_id,port,weight,max_connections,comment) VALUES ('127.0.0.1',8100,$NODE_MYPORT_3,10000,999,'Backup writer 2')

# scheduler script
# allow scheduler script to write its logs
--chmod 0777 $MYSQL_TMP_DIR

# The following line works with Perl
# --replace_result $proxysql_scheduler_script SCHEDULER_SCRIPT $MYSQL_TMP_DIR MYSQL_TMP_DIR
# --eval INSERT INTO scheduler (id,active,interval_ms,filename,arg1) values (10,1,3000,"$proxysql_scheduler_script","-u=admin -p=admin -h=127.0.0.1 -H=$wHG:W,$rHG:R -P=6032 --debug=1 --active_failover=1 --retry_down=2 --writer_is_also_reader=0 --log=$MYSQL_TMP_DIR/galera_check-perl.log")
# The following line works with Golang
--replace_result $proxysql_scheduler_script SCHEDULER_SCRIPT $proxysql_scheduler_config_dir CONFIG_DIR
--eval INSERT INTO scheduler (id,active,interval_ms,filename,arg1) values (10,1,3000,"$proxysql_scheduler_script","config-file=$proxysql_scheduler_config_dir/reader_to_maintenance.toml")

--source ../include/apply_proxysql_config.inc

#
# ACT 1
#

# connect as the regular user
--connect(conn_app_test, 127.0.0.1, app_test, test, , 6033)
--connection conn_app_test
CREATE TABLE t1 (a int primary key);
INSERT INTO t1 VALUES (1), (2), (3);

# Put node_2 (current reader) into the maintenance
--connection node_2
SET global pxc_maint_mode=MAINTENANCE;

# now let ProxySQL scheduler detect this change and do its job
--sleep 10

# Reconnect allowing ProxySQL to route to the new backend
--disconnect conn_app_test
--connect(conn_app_test, 127.0.0.1, app_test, test, , 6033)
--connection conn_app_test
INSERT INTO t1 VALUES (11), (12), (13);
SELECT * FROM t1 ORDER BY a ASC;

#
# ASSERT 1
#

--connection proxysql_admin
# node_2 it is OFFLINE_SOFT
-- echo node_2 ($NODE_MYPORT_2) -> maintenance
--eval SELECT * FROM runtime_mysql_servers WHERE port=$NODE_MYPORT_2 ORDER BY hostgroup_id


#
# ACT 2
#

# Put node_2 back from maintenance
--connection node_2
SET global pxc_maint_mode=DISABLED;

# now let ProxySQL scheduler detect this change and do its job
--sleep 10

# Reconnect allowing ProxySQL to route to the new backend
--disconnect conn_app_test
--connect(conn_app_test, 127.0.0.1, app_test, test, , 6033)
--connection conn_app_test
INSERT INTO t1 VALUES (21), (22), (23);
SELECT * from t1 ORDER BY a ASC;

#
# ASSERT 2
#

--connection proxysql_admin
-- echo node_2 ($NODE_MYPORT_1) -> back from maintenance to reader
# it is ONLINE, and it is reader
--eval SELECT * FROM runtime_mysql_servers WHERE port=$NODE_MYPORT_2 ORDER BY hostgroup_id;


#
# CLEANUP
#
# proxysql
--connection proxysql_admin
--source ../include/common_proxysql_deinit.inc
--remove_files_wildcard $MYSQL_TMP_DIR galera_check-perl.log*

# pxc
--connection node_1
SET global pxc_maint_mode=DISABLED;
DROP TABLE t1;
--source ../include/common_pxc_deinit.inc
