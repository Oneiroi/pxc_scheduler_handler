<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c603b4de-b46a-45fd-bef4-8d20deb405fc" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/.travis.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/.travis.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/COMPATIBLE" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/COMPATIBLE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/COPYING" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/COPYING" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/example.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/example.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/example.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/example.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/hard.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/hard.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/implicit.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/implicit.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/invalid-apples.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/invalid-apples.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/invalid.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/invalid.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/readme1.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/readme1.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/readme2.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/_examples/readme2.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-decoder/COPYING" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-decoder/COPYING" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-decoder/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-decoder/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-decoder/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-decoder/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-encoder/COPYING" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-encoder/COPYING" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-encoder/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-encoder/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-encoder/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/toml-test-encoder/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/tomlv/COPYING" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/tomlv/COPYING" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/tomlv/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/tomlv/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/tomlv/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/cmd/tomlv/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/decode.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/decode.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/decode_meta.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/decode_meta.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/decode_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/decode_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/encode.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/encode.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/encode_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/encode_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/encoding_types.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/encoding_types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/encoding_types_1.1.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/encoding_types_1.1.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/lex.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/lex.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/parse.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/parse.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/session.vim" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/session.vim" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/type_check.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/type_check.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/type_fields.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/BurntSushi/toml/type_fields.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/.travis.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/.travis.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/cov_report.sh" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/cov_report.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/bypass.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/bypass.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/bypasssafe.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/bypasssafe.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/common.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/common.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/common_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/common_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/dump.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/dump.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/dump_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/dump_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/dumpcgo_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/dumpcgo_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/dumpnocgo_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/dumpnocgo_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/example_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/example_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/format.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/format.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/format_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/format_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/internal_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/internal_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/internalunsafe_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/internalunsafe_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/spew.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/spew.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/spew_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/spew_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/testdata/dumpcgo.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/spew/testdata/dumpcgo.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/test_coverage.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/davecgh/go-spew/test_coverage.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/pmezard/go-difflib/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/pmezard/go-difflib/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/pmezard/go-difflib/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/pmezard/go-difflib/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/pmezard/go-difflib/difflib/difflib.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/pmezard/go-difflib/difflib/difflib.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/pmezard/go-difflib/difflib/difflib_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/pmezard/go-difflib/difflib/difflib_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/.golangci.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/.golangci.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/.travis.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/.travis.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/CHANGELOG.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/CHANGELOG.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/alt_exit.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/alt_exit.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/alt_exit_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/alt_exit_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/appveyor.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/appveyor.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/buffer_pool.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/buffer_pool.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/entry.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/entry.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/entry_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/entry_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_basic_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_basic_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_custom_caller_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_custom_caller_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_default_field_value_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_default_field_value_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_function_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_function_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_global_hook_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_global_hook_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_hook_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/example_hook_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/exported.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/exported.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/formatter.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/formatter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/formatter_bench_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/formatter_bench_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hook_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hook_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/syslog/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/syslog/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/syslog/syslog.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/syslog/syslog.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/syslog/syslog_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/syslog/syslog_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/test/test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/test/test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/test/test_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/test/test_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/writer/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/writer/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/writer/writer.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/writer/writer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/writer/writer_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/hooks/writer/writer_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/internal/testutils/testutils.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/internal/testutils/testutils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/json_formatter.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/json_formatter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/json_formatter_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/json_formatter_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/level_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/level_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logger.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logger_bench_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logger_bench_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logger_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logger_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logrus.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logrus.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logrus_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/logrus_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_appengine.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_appengine.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_bsd.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_bsd.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_js.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_js.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_no_terminal.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_no_terminal.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_notappengine.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_notappengine.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_solaris.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_solaris.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/terminal_check_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/text_formatter.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/text_formatter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/text_formatter_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/text_formatter_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/travis/cross_build.sh" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/travis/cross_build.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/travis/install.sh" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/travis/install.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/travis/lint.sh" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/travis/lint.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/writer.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/writer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/writer_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/sirupsen/logrus/writer_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/.github/pull_request_template.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/.github/pull_request_template.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/.travis.gofmt.sh" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/.travis.gofmt.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/.travis.gogenerate.sh" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/.travis.gogenerate.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/.travis.govet.sh" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/.travis.govet.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/.travis.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/.travis.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/CONTRIBUTING.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/CONTRIBUTING.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/MAINTAINERS.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/MAINTAINERS.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/_codegen/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/_codegen/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/_codegen/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/_codegen/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/_codegen/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/_codegen/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/_codegen/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/_codegen/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_compare.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_compare.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_compare_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_compare_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_format.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_format.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_format.go.tmpl" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_format.go.tmpl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_forward.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_forward.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_forward.go.tmpl" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_forward.go.tmpl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_order.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_order.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_order_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertion_order_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertions.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertions_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/assertions_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/forward_assertions.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/forward_assertions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/forward_assertions_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/forward_assertions_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/http_assertions.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/http_assertions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/http_assertions_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/assert/http_assertions_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/http/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/http/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/http/test_response_writer.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/http/test_response_writer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/http/test_round_tripper.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/http/test_round_tripper.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/mock/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/mock/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/mock/mock.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/mock/mock.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/mock/mock_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/mock/mock_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/package_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/package_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/forward_requirements.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/forward_requirements.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/forward_requirements_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/forward_requirements_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/require.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/require.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/require.go.tmpl" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/require.go.tmpl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/require_forward.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/require_forward.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/require_forward.go.tmpl" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/require_forward.go.tmpl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/requirements.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/requirements.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/requirements_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/require/requirements_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/interfaces.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/interfaces.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/stats.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/stats.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/stats_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/stats_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/suite.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/suite.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/suite_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/stretchr/testify/suite/suite_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/.travis.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/.travis.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/COMPATIBLE" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/COMPATIBLE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/COPYING" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/COPYING" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/example.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/example.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/example.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/example.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/hard.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/hard.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/implicit.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/implicit.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/invalid-apples.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/invalid-apples.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/invalid.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/invalid.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/readme1.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/readme1.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/readme2.toml" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/_examples/readme2.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-decoder/COPYING" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-decoder/COPYING" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-decoder/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-decoder/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-decoder/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-decoder/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-encoder/COPYING" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-encoder/COPYING" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-encoder/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-encoder/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-encoder/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/toml-test-encoder/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/tomlv/COPYING" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/tomlv/COPYING" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/tomlv/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/tomlv/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/tomlv/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/cmd/tomlv/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/decode.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/decode.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/decode_meta.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/decode_meta.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/decode_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/decode_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/encode.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/encode.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/encode_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/encode_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/encoding_types.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/encoding_types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/encoding_types_1.1.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/encoding_types_1.1.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/lex.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/lex.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/parse.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/parse.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/session.vim" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/session.vim" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/type_check.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/type_check.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/github.com/tusamarco/toml/type_fields.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/github.com/tusamarco/toml/type_fields.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/.travis.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/.travis.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/NOTICE" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/NOTICE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/apic.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/apic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/decode.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/decode.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/decode_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/decode_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/emitterc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/emitterc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/encode.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/encode.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/encode_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/encode_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/example_embedded_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/example_embedded_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/limit_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/limit_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/node_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/node_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/parserc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/parserc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/readerc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/readerc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/resolve.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/resolve.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/scannerc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/scannerc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/sorter.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/sorter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/suite_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/suite_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/writerc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/writerc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/yaml.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/yaml.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/yamlh.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/yamlh.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/yamlprivateh.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/gopkg.in/yaml.v3/yamlprivateh.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.15.6" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$" />
      </list>
    </option>
  </component>
  <component name="ProjectId" id="1kQaJgjd0IeyMB1nfEEQw8D6AZy" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DatabaseDriversLRU" value="mysql" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="false" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\work\github\pxc_scheduler" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/lib/Sql/proxy" />
      <recent name="D:\work\github\pxc_scheduler\lib" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="go build proxy_scheduler.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="pxc_scheduler" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="config-file=config.toml" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/proxy_scheduler.go" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build proxy_scheduler.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c603b4de-b46a-45fd-bef4-8d20deb405fc" name="Default Changelist" comment="" />
      <created>1605635198932</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1605635198932</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/test_connection.go</url>
          <line>26</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/proxy_scheduler.go</url>
          <line>2</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/proxy_scheduler.go</url>
          <line>93</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/proxy_scheduler.go</url>
          <line>62</line>
          <option name="timeStamp" value="15" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="GoApplicationRunConfiguration">
        <watch expression="os.Args" />
      </configuration>
    </watches-manager>
  </component>
</project>